/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    // flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            	timeout-ms = <50>;
            	key-positions = <0 1>;
            	bindings = <&kp ESC>;
        };
        combo_bspc {
            	timeout-ms = <50>;
            	key-positions = <8 9>;
            	bindings = <&kp BSPC>;
        };
        combo_tab {
            	timeout-ms = <50>;
            	key-positions = <10 11>;
            	bindings = <&kp TAB>;
        };
        combo_sqt {
        	timeout-ms = <50>;
            	key-positions = <18 19>;
            	bindings = <&kp SQT>;
        }; 
        combo_qmark {
            	timeout-ms = <50>;
            	key-positions = <28 29>;
            	bindings = <&kp QMARK>;
        };
        combo_trilayer {
        	timeout-ms = <50>;
                key-positions = <31 32>;
                bindings = <&mo 3>;
        }; 
    };
    behaviors {        
        ht: hold_tap {
        	compatible = "zmk,behavior-hold-tap";
                label = "HOLD_TAP";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
        };   
    };

    keymap {
        compatible = "zmk,keymap";
            
        default_layer {
            bindings = <
                &kp Q       &kp W      &kp E      &kp R        &kp T 	               &kp Y       &kp U        &kp I      &kp O      &kp P 
                &ht LCTRL A &ht LALT S &ht LGUI D &ht LSHIFT F &kp G 	               &kp H       &ht LSHIFT J &ht LGUI K &kp L &kp SEMI
                &mt LSFT Z  &kp X      &kp C      &kp V        &kp B		           &kp N       &kp M        &kp COMMA  &kp DOT    &mt LSFT FSLH
                                                  &kp LGUI     &lt 1 RET               &lt 2 SPACE &mo 3 
            >;
        };

        left_layer {
            bindings = < 
                &kp GRAVE     &trans       &trans       &trans   &trans              &trans    &kp UNDER &kp PLUS        &kp PIPE &kp DEL
                &kp EXCL      &kp AT       &kp HASH     &kp DLLR &kp PRCNT           &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR 
                &mt LSFT LPRN &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &trans              &trans    &trans    &kp LBRC        &kp RBRC &mt LSFT RPRN
                                                        &trans   &trans              &trans    &trans  
            >;
        };
        
        right_layer {
            bindings = <
                &kp TAB       &trans &trans &trans &trans                            &trans &kp MINUS &kp KP_EQUAL &kp BSLH  &kp BSPC
                &kp N1        &kp N2 &kp N3 &kp N4 &kp N5                            &kp N6 &kp N7    &kp N8    &kp N9   &kp N0
                &mt LSFT LPRN &trans &trans &trans &trans 	                         &trans &trans    &kp LBKT  &kp RBKT &kp QMARK 
                                            &trans &kp BSPC  	                     &trans &trans  
            >;
        };	
        
        tri_layer {
            bindings = <
                &tran      &kp UP       &trans       &kp PG_UP    &kp HOME	         &kp LS(LG(N4)) &kp LS(LG(N3)) &trans        &trans        &trans
                &kp LEFT   &kp DOWN     &kp RIGHT    &kp PG_DN    &kp END            &kp LEFT       &kp DOWN       &kp UP        &kp RIGHT     &kp SQT 
                &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &trans         &kp LS(LG(M))  &kp LS(LG(O)) &kp LS(LG(F)) &trans   
                                                     &trans       &trans             &trans         &trans 
            >;
        };	
        
	};
};